{"version":3,"sources":["Header.js","AddressRow.js","Table.js","users.js","App.js","serviceWorker.js","index.js"],"names":["divStyle","backgroundColor","width","height","marginBottom","pStyle","color","fontSize","Header","style","React","Component","AddressRow","props","this","address1","address2","phone","divTable","borderColor","borderWidth","borderStyle","marginTop","marginLeft","divFilter","background","margin","pFilter","Table","className","user","address","map","area","key","_id","App","state","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kNAEIA,EAAW,CACPC,gBAAiB,QACjBC,MAAO,OACPC,OAAQ,OACRC,aAAc,QAGlBC,EAAS,CACLC,MAAO,QACPC,SAAU,QAkBHC,E,iLAVP,OACI,yBAAKC,MAAST,GACN,wBAAIS,MAAOJ,GAAX,e,GANCK,IAAMC,WCIZC,E,YAhBX,WAAYC,GAAO,qEACTA,I,sEAIN,OACQ,6BACI,+BAAI,mCAAJ,IAAiBC,KAAKD,MAAME,SAA5B,KAAuC,iCAAvC,KAAmDD,KAAKD,MAAMG,UAC9D,+BAAI,sCAAeF,KAAKD,MAAMI,OAC9B,kC,GAVKP,IAAMC,WCC3BO,EAAW,CACXhB,MAAO,MACPC,OAAQ,QACRgB,YAAa,QACbC,YAAa,MACbC,YAAa,QACbC,UAAW,OACXC,WAAY,OAGZC,EAAY,CACZC,WAAY,OACZvB,MAAO,OACPC,OAAQ,OACRuB,OAAQ,KAGRC,EAAU,CACVrB,MAAO,QACPC,SAAU,QAkCCqB,E,YA5BX,WAAYf,GAAQ,qEACVA,I,sEAKF,OACQ,yBAAKgB,UAAW,WAAWpB,MAASS,GAC5B,2BAAIJ,KAAKD,MAAMiB,MACf,yBAAKD,UAAW,SAASpB,MAAOe,GACxB,uBAAGf,MAASkB,GAAZ,UACCb,KAAKD,MAAMkB,QAAQC,KAAK,SAAAC,GACrB,OAAO,kBAAC,EAAD,CACiBC,IAAOD,EAAKE,IAEZpB,SAAYkB,EAAKlB,SAEjBC,SAAYiB,EAAKjB,SAEjBC,MAASgB,EAAKhB,iB,GArB1DP,IAAMC,WC1BboB,EAAU,CACnB,CACE,IAAO,2BACP,MAAS,oBACT,SAAY,6CACZ,SAAY,oDAEd,CACE,IAAO,2BACP,MAAS,oBACT,SAAY,sDACZ,SAAY,0CAEd,CACE,IAAO,2BACP,MAAS,oBACT,SAAY,uCACZ,SAAY,6CAEd,CACE,IAAO,2BACP,MAAS,oBACT,SAAY,4CACZ,SAAY,8CAEd,CACE,IAAO,2BACP,MAAS,oBACT,SAAY,yDACZ,SAAY,uDAEd,CACE,IAAO,2BACP,MAAS,oBACT,SAAY,yCACZ,SAAY,kDAEd,CACE,IAAO,2BACP,MAAS,oBACT,SAAY,kDACZ,SAAY,2CClBHK,E,2MAfbC,MAAQ,CACNN,QAASA,G,wEAIT,OACM,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAOD,KAAO,SAASC,QAAWjB,KAAKuB,MAAMN,UAC7C,kBAAC,EAAD,CAAOD,KAAO,YAAYC,QAAWjB,KAAKuB,MAAMN,e,GAX1CrB,IAAMC,WCMJ2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.099b40de.chunk.js","sourcesContent":["import React from 'react'\n \nlet divStyle = { \n        backgroundColor: 'green',\n        width: '100%',\n        height: '50px',\n        marginBottom: '10px'\n}\n\nlet pStyle = { \n        color: 'white',\n        fontSize: '20px'\n}\n\n\nclass Header extends React.Component { \n    \n\n    render() { \n        return ( \n            <div style = {divStyle}>\n                    <h1 style={pStyle}>Header</h1>\n            </div>\n        )\n    }\n    \n}\n\n\nexport default Header;","import React from 'react'\n\nclass AddressRow extends React.Component{ \n    constructor(props){ \n        super(props);\n    }\n\n    render() { \n        return( \n                <div>\n                    <p> <b>from</b> {this.props.address1}  <b>to</b>  {this.props.address2}</p>\n                    <p> <b>phone: </b>{this.props.phone}</p>\n                    <hr/>\n                </div>\n        );\n    }\n}\n\n\nexport default AddressRow;","import React from 'react'\nimport  AddressRow from './AddressRow'\n\nlet divTable = { \n    width: '66%',\n    height: '660px',\n    borderColor: 'black',\n    borderWidth: '2px',\n    borderStyle: 'Solid',\n    marginTop: '30px',\n    marginLeft: '20%'\n}\n\nlet divFilter = { \n    background: 'blue',\n    width: '100%',\n    height: '40px',\n    margin: '0'\n}\n\nlet pFilter = { \n    color: 'white',\n    fontSize: '18px'\n}\n\n\nclass Table extends React.Component{ \n\n    constructor(props) { \n        super(props)\n    }\n\n\n    render() { \n            return ( \n                    <div className= 'divTable' style = {divTable}>\n                            <p>{this.props.user}</p>\n                            <div className= 'Filter' style={divFilter}>\n                                    <p style = {pFilter}>Filter</p>\n                                    {this.props.address.map( area => { \n                                        return <AddressRow \n                                                                key = {area._id}\n\n                                                                address1 = {area.address1}\n\n                                                                address2 = {area.address2}\n\n                                                                phone = {area.phone}\n                                         />\n                                    })}\n                            </div>\n                    </div>\n            );\n    }\n}\n\nexport default Table;","export const address = [\n    {\n      \"_id\": \"5e4933ceaabde3598c523cdb\",\n      \"phone\": \"+1 (899) 449-2281\",\n      \"address1\": \"204 Gerry Street, Wadsworth, Vermont, 7612\",\n      \"address2\": \"829 Falmouth Street, Dowling, South Dakota, 4768\"\n    },\n    {\n      \"_id\": \"5e4933ce596ed55517b41018\",\n      \"phone\": \"+1 (906) 581-2449\",\n      \"address1\": \"151 Kenilworth Place, Chelsea, Virgin Islands, 6671\",\n      \"address2\": \"199 Grace Court, Cetronia, Texas, 7398\"\n    },\n    {\n      \"_id\": \"5e4933ce4e8921d603fadde3\",\n      \"phone\": \"+1 (855) 530-2194\",\n      \"address1\": \"796 Suydam Street, Ada, Kansas, 2821\",\n      \"address2\": \"997 Gardner Avenue, Rivera, Florida, 9578\"\n    },\n    {\n      \"_id\": \"5e4933ce33b4c5073c1aa318\",\n      \"phone\": \"+1 (979) 549-3128\",\n      \"address1\": \"652 Windsor Place, Cresaptown, Iowa, 7701\",\n      \"address2\": \"397 Borinquen Pl, Jenkinsville, Utah, 5375\"\n    },\n    {\n      \"_id\": \"5e4933ce3373ecda8c3434bd\",\n      \"phone\": \"+1 (863) 444-3046\",\n      \"address1\": \"325 Greenpoint Avenue, Bellfountain, Puerto Rico, 5081\",\n      \"address2\": \"591 Whitwell Place, Vincent, Marshall Islands, 5112\"\n    },\n    {\n      \"_id\": \"5e4933cedb58fb5e2af62314\",\n      \"phone\": \"+1 (898) 401-3949\",\n      \"address1\": \"432 Hazel Court, Chemung, Nevada, 9233\",\n      \"address2\": \"472 Seagate Avenue, Warren, North Dakota, 3477\"\n    },\n    {\n      \"_id\": \"5e4933ce31002d2147a28d25\",\n      \"phone\": \"+1 (801) 562-3762\",\n      \"address1\": \"157 Merit Court, Somerset, North Carolina, 5307\",\n      \"address2\": \"720 Prescott Place, Biddle, Guam, 4094\"\n    }\n  ]","import React from 'react';\nimport Header from './Header'\nimport Table from './Table'\nimport {address} from './users.js'\n\n\nclass App extends React.Component{\n\n  state = { \n    address: address\n  };\n\n  render() { \n    return ( \n          <div>\n            <Header />\n            <Table user = 'Driver' address = {this.state.address} />\n            <Table user = 'Passenger' address = {this.state.address} />\n          </div>\n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}